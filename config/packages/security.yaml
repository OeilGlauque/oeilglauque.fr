security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers

    encoders:
        # Symfony\Component\Security\Core\User\User: plaintext # for in-memory provider
        App\Entity\User:
            algorithm: bcrypt
    
    providers:
        #in_memory: 
        #    memory:
        #        users:
        #            admin:
        #                password: pwd
        #                roles: 'ROLE_ADMIN'
        db_provider:
            entity:
                class: App\Entity\User
                property: pseudo

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            pattern: ^/
            anonymous: ~
            form-login: 
                login_path: login
                check_path: login
            logout:
                path: /logout
                target: /
            provider: db_provider



            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate
            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY } # Avoid login loops #pascomme√ßazinedine
        - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
